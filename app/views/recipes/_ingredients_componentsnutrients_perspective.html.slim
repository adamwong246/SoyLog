- padded_columns = 4
- ingredients = @recipe.ingredients

table.table.table-condensed
  / caption "#{@recipe.name}, full formula"
  thead
    tr
      td
      th FDA RDA
      th Actual
      th FDA % 
      th ComponentNutrients

      - ingredients.each do |ingredient|
        th= link_to ingredient.component.name, ingredient.component
      

    tr
      th URL
      td colspan=padded_columns      
      - ingredients.each do |ingredient|
        td= link_to get_host_without_www(ingredient.url), ingredient.url
    / tr
    /   th Price
    /   td colspan=padded_columns
    /   - ingredients.each do |ingredient|
    /     td= ingredient.price
    tr
      th Total cost
      td
      td = @recipe.full_cost
      td
      td 
      - ingredients.each do |ingredient|
        td= Unit.new(ingredient.price)
    tr
      th Serving size
      td colspan=padded_columns
      - ingredients.each do |ingredient|
        / td= best_in_place ingredient, :servings, type: :input
        td
          = best_in_place ingredient, :servings, :type => :input
          = "%"
    tr
      th Default Serving size
      td colspan=padded_columns
      - ingredients.each do |ingredient|
        / td= best_in_place ingredient, :servings, type: :input
        td
          = ingredient.component.serving_size        

    tr
      th Measured amount
      td colspan=padded_columns
        - ingredients.each do |ingredient|
          td= ingredient.measured_amount

      

    tr
      th Cost per serving
      td
      td = @recipe.cost_per_serving
      td
      td

      - ingredients.each do |i|
        td= i.cost_per_daily_serving

        
    tr
      th ComponentNutrients
      td colspan=padded_columns
      - ingredients.each do |ingredient|
        th
          ul
            - ingredient.component_nutrients.each do |cn| 
              li
                = link_to cn.identify_short, cn
                = " * "
                = ingredient.servings
                = " servings = "
                = ingredient.servings * Unit(cn.amount)
                = " per day"

    / Loop over all Ingredients
    - [true, false].each do |in_recipe|
      - [*@nutrients[in_recipe]].each do |nutrient|

        - row_class = 'error' if !in_recipe

        tr class=row_class
          th
            = link_to nutrient.name, nutrient

          td= nutrient.fda_rda
          
          /  This operation is expensive, so look it up if possible
          td = @recipe.calculated_daily_serving_of(nutrient)

          / # - percent_rda = ((nutrient.component_nutrients.sum{|cn| cn.amount} / nutrient.fda_rda) * 100  ).round(2)
          / td= number_to_percentage(recipe.percent_fda_rda_of(nutrient))
          td
            = "%"
            = recipe.percent_fda_rda_of(nutrient)

 
          / - percent_diff = (percent_rda-100).abs

          / - if (percent_diff < 1)
          /   td.success
          /     p= percent_rda

          / - elsif percent_diff > 10
          /   td.error
          /     p= percent_rda

          / -else
          /   td.warning
          /     p= "#{percent_rda} %"

          th 
            ul              
              - @recipe.all_ingredients_which_supply(nutrient).each do |i|
                li
                  - cn = ComponentNutrient.which_joins(i, nutrient).each do |cn|
                    = link_to cn.identify_short, cn
                    = " * "
                    = i.servings
                    = " servings of "
                    = link_to cn.component.name, cn.component
                    = " = "
                    = i.servings * Unit(cn.amount)
                  /   - if cn
                  /     = i.servings * Unit(cn.amount)
                  /     / i.servings * Unit(i.component.serving_size)
                  /     = " of "
                  /     = link_to nutrient.name, nutrient
                  /     = " from "
                  /     = link_to i.component.name, i.component


          - @recipe.ingredients.each do |ingredient|
            - comp_nuts = ComponentNutrient.which_joins(ingredient, nutrient)
            
            - if !comp_nuts.empty?
              td.info
                - comp_nuts.each do |cn|                    
                  = link_to cn.identify_short, cn
                  = " * "
                  = ingredient.servings
                  = " = "
                  = ingredient.servings * Unit(cn.amount)
            - else
              td         
                / - if can? :edit, @recipe     
                /   = link_to "Create", new_component_nutrient_path(params: {component_id: ingredient.component.id, nutrient_id: nutrient.id} )
              
              
          
