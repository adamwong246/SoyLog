- assciation_map_array = member.class.reflect_on_all_associations.map{|a| {a.name => a.macro}}

.super-show.well

  .page-header
              
    h1            
      = "#{member.class} "  
      small= member.identify
    = render :partial => "layouts/actions", :locals => { :object => member, :actions => actions ||= [:info, :index, :flag, :new, :edit, :destroy]}

  / h5= member.class.description

  table.table.table-condensed

    - columns.each do |column|
      tr
        th
          / # =column.inspect
          = column.to_s unless column == :identify
          - td_class = "info" if column == :identify

        td class=td_class
          - arr = [*apply_chain_link_or_print([*column], member)]

          - arr.each do |element|

            - if TrueClass >= element.class
              i.icon-ok

            - elsif FalseClass >= element.class
              i.icon-remove

            - elsif String >= element.class

              - if is_uri?(element)
                = link_to element, element

              - else
                = element
            
            - elsif Numeric >= element.class
              = element
            
            - elsif element.nil?
              i.icon-remove

            - else
              = h_link element

            br

          
          - hash = assciation_map_array.select{|hash| hash.keys[0] == column }.first

          - if hash && (can? :edit, member)
            - if hash[column] == :has_many              
                = link_to [:edit, member], id: "new-#{column.to_s.singularize}-link", class: "hinted ", rel:'popover', 'data-content' => "Add a #{column.to_s.singularize} to this #{member.class.to_s}", 'data-placement' => "right" do
                  button class=button_class_lookup(:new)
                    i class=icon_class_lookup(:new)
